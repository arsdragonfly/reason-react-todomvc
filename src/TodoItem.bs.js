// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Cn = require("re-classnames/src/Cn.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_Result = require("bs-platform/lib/js/belt_Result.js");
var TodoStore$ReactHooksTemplate = require("./TodoStore.bs.js");
var TodoTextInput$ReactHooksTemplate = require("./TodoTextInput.bs.js");

function TodoItem(Props) {
  var id = Props.id;
  var text = Props.text;
  var completed = Props.completed;
  var match = React.useState((function () {
          return false;
        }));
  var setEditing = match[1];
  var editing = match[0];
  var element = editing ? React.createElement(TodoTextInput$ReactHooksTemplate.make, {
          onSave: (function (text) {
              var id$1 = id;
              var text$1 = text;
              if (text$1.length === 0) {
                return Belt_Result.getWithDefault(TodoStore$ReactHooksTemplate.deleteTodo(id$1), /* () */0);
              } else {
                return Belt_Result.getWithDefault(TodoStore$ReactHooksTemplate.editTodo(id$1, text$1), /* () */0);
              }
            }),
          text: text,
          placeholder: "",
          editing: editing,
          newTodo: false
        }) : React.createElement("div", {
          className: "view"
        }, React.createElement("input", {
              className: "toggle",
              checked: completed,
              type: "checkbox",
              onChange: (function (param) {
                  return Belt_Result.getWithDefault(TodoStore$ReactHooksTemplate.toggleTodo(id), /* () */0);
                })
            }), React.createElement("label", {
              onDoubleClick: (function (param) {
                  return Curry._1(setEditing, (function (param) {
                                return true;
                              }));
                })
            }, text), React.createElement("button", {
              className: "destroy",
              onClick: (function (param) {
                  return Belt_Result.getWithDefault(TodoStore$ReactHooksTemplate.deleteTodo(id), /* () */0);
                })
            }));
  return React.createElement("li", {
              className: Cn.make(/* :: */[
                    Cn.ifTrue("completed", completed),
                    /* :: */[
                      Cn.ifTrue("editing", editing),
                      /* [] */0
                    ]
                  ])
            }, element);
}

var make = TodoItem;

exports.make = make;
/* react Not a pure module */
