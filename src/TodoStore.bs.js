// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");
var Decode_AsResult_OfParseError = require("bs-decode/./src/Decode_AsResult_OfParseError.bs.js");

function makeTodoItem(text, completed, id) {
  return /* record */[
          /* text */text,
          /* completed */completed,
          /* id */id
        ];
}

function makeStore(todoItems, visibilityFilter) {
  return /* record */[
          /* todoItems */todoItems,
          /* visibilityFilter */visibilityFilter
        ];
}

function decodeTodoItem(json) {
  return Curry._2(Decode_AsResult_OfParseError.Pipeline[/* run */7], json, Curry._3(Decode_AsResult_OfParseError.Pipeline[/* field */1], "id", Decode_AsResult_OfParseError.Pipeline[/* intFromNumber */19], Curry._3(Decode_AsResult_OfParseError.Pipeline[/* field */1], "completed", Decode_AsResult_OfParseError.Pipeline[/* boolean */16], Curry._3(Decode_AsResult_OfParseError.Pipeline[/* field */1], "text", Decode_AsResult_OfParseError.Pipeline[/* string */17], Curry._1(Decode_AsResult_OfParseError.Pipeline[/* succeed */0], makeTodoItem)))));
}

function decodeStore(json) {
  return Curry._2(Decode_AsResult_OfParseError.Pipeline[/* run */7], json, Curry._3(Decode_AsResult_OfParseError.Pipeline[/* field */1], "visibilityFilter", Decode_AsResult_OfParseError.Pipeline[/* string */17], Curry._3(Decode_AsResult_OfParseError.Pipeline[/* field */1], "todoItems", Curry._1(Decode_AsResult_OfParseError.array, decodeTodoItem), Curry._1(Decode_AsResult_OfParseError.Pipeline[/* succeed */0], makeStore))));
}

function encodeTodoItem(t) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "text",
                t[/* text */0]
              ],
              /* :: */[
                /* tuple */[
                  "completed",
                  t[/* completed */1]
                ],
                /* :: */[
                  /* tuple */[
                    "id",
                    t[/* id */2]
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function encodeStore(s) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "todoItems",
                Json_encode.array(encodeTodoItem, s[/* todoItems */0])
              ],
              /* :: */[
                /* tuple */[
                  "visibilityFilter",
                  s[/* visibilityFilter */1]
                ],
                /* [] */0
              ]
            ]);
}

function setStore(s) {
  localStorage.setItem("store", JSON.stringify(encodeStore(s)));
  return /* () */0;
}

function getStore(param) {
  return decodeStore(JSON.parse(Belt_Option.getWithDefault(Caml_option.null_to_opt(localStorage.getItem("store")), "{todoItems: [], visibilityFilter: \"All\"}")));
}

var Decode = 0;

exports.makeTodoItem = makeTodoItem;
exports.makeStore = makeStore;
exports.Decode = Decode;
exports.decodeTodoItem = decodeTodoItem;
exports.decodeStore = decodeStore;
exports.encodeTodoItem = encodeTodoItem;
exports.encodeStore = encodeStore;
exports.setStore = setStore;
exports.getStore = getStore;
/* Decode_AsResult_OfParseError Not a pure module */
